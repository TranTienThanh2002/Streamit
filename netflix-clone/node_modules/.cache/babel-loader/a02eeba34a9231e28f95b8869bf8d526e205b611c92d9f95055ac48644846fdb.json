{"ast":null,"code":"var _jsxFileName = \"D:\\\\Traniing-Reactjs\\\\NetFlix-clone\\\\netflix-clone\\\\src\\\\contact\\\\contactPage\\\\contactPage.jsx\";\nimport React from 'react';\nimport { Breadcrumb } from '../../components/breadcrumb/breadcrumb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactPage = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contact\",\n      children: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n        active: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = ContactPage;\nvar _c;\n$RefreshReg$(_c, \"ContactPage\");","map":{"version":3,"names":["React","Breadcrumb","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactPage","children","className","active","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Traniing-Reactjs/NetFlix-clone/netflix-clone/src/contact/contactPage/contactPage.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Breadcrumb } from '../../components/breadcrumb/breadcrumb'\r\n\r\nexport const ContactPage = () => {\r\n  return (\r\n    <>\r\n        <section className=\"contact\">\r\n            <Breadcrumb active=\"Contact\"/>\r\n        </section>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,wCAAwC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnE,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACIJ,OAAA;MAASK,SAAS,EAAC,SAAS;MAAAD,QAAA,eACxBJ,OAAA,CAACF,UAAU;QAACQ,MAAM,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACxB,iBACX;AAEP,CAAC;AAAAC,EAAA,GARYR,WAAW;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}