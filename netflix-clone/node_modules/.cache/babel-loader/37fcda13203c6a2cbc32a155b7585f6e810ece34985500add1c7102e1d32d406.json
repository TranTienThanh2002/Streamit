{"ast":null,"code":"var _jsxFileName = \"D:\\\\Traniing-Reactjs\\\\NetFlix-clone\\\\netflix-clone\\\\src\\\\genres\\\\genres.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb } from \"../components/breadcrumb/breadcrumb\";\nimport { MovieGenres } from \"../dummyData\";\nimport \"./genres.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Genres = () => {\n  _s();\n  const [genres, setgenres] = useState(MovieGenres);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"genres\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n        active: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-genres\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-genres\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"title\",\n              children: \"Movie Genres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-genres\",\n            children: genres.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"box-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"img-box\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.cover,\n                  alt: item.genres\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 21,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box-description\",\n                children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: item.genres,\n                    children: item.genres\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 25,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Genres, \"QoDcHs0f5e1HSw5+J4GuSFtvmn8=\");\n_c = Genres;\nvar _c;\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"names":["React","useState","Link","Breadcrumb","MovieGenres","jsxDEV","_jsxDEV","Fragment","_Fragment","Genres","_s","genres","setgenres","children","className","active","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","src","cover","alt","to","_c","$RefreshReg$"],"sources":["D:/Traniing-Reactjs/NetFlix-clone/netflix-clone/src/genres/genres.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"../components/breadcrumb/breadcrumb\";\r\nimport { MovieGenres } from \"../dummyData\";\r\nimport \"./genres.css\";\r\nexport const Genres = () => {\r\n  const [genres, setgenres] = useState(MovieGenres);\r\n  return (\r\n    <>\r\n      <section className=\"genres\">\r\n        <Breadcrumb active=\"Genres\" />\r\n        <div className=\"movie-genres\">\r\n          <div className=\"container\">\r\n            <div className=\"title-genres\">\r\n              <h4 className=\"title\">Movie Genres</h4>\r\n            </div>\r\n            <div className=\"box-genres\">\r\n              {genres.map((item, index) => (\r\n                <div className=\"box-item\" key={index}>\r\n                  <div className=\"img-box\">\r\n                    <img src={item.cover} alt={item.genres} />\r\n                  </div>\r\n                  <div className=\"box-description\">\r\n                    <h6>\r\n                      <Link to={item.genres}>{item.genres}</Link>\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,QAAQ,qCAAqC;AAChE,SAASC,WAAW,QAAQ,cAAc;AAC1C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACtB,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAACG,WAAW,CAAC;EACjD,oBACEE,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA;MAASQ,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACzBP,OAAA,CAACH,UAAU;QAACY,MAAM,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC9Bb,OAAA;QAAKQ,SAAS,EAAC,cAAc;QAAAD,QAAA,eAC3BP,OAAA;UAAKQ,SAAS,EAAC,WAAW;UAAAD,QAAA,gBACxBP,OAAA;YAAKQ,SAAS,EAAC,cAAc;YAAAD,QAAA,eAC3BP,OAAA;cAAIQ,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAC;YAAY;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAK;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACnC,eACNb,OAAA;YAAKQ,SAAS,EAAC,YAAY;YAAAD,QAAA,EACxBF,MAAM,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBhB,OAAA;cAAKQ,SAAS,EAAC,UAAU;cAAAD,QAAA,gBACvBP,OAAA;gBAAKQ,SAAS,EAAC,SAAS;gBAAAD,QAAA,eACtBP,OAAA;kBAAKiB,GAAG,EAAEF,IAAI,CAACG,KAAM;kBAACC,GAAG,EAAEJ,IAAI,CAACV;gBAAO;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAAG;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACtC,eACNb,OAAA;gBAAKQ,SAAS,EAAC,iBAAiB;gBAAAD,QAAA,eAC9BP,OAAA;kBAAAO,QAAA,eACEP,OAAA,CAACJ,IAAI;oBAACwB,EAAE,EAAEL,IAAI,CAACV,MAAO;oBAAAE,QAAA,EAAEQ,IAAI,CAACV;kBAAM;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA;gBAAQ;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cACxC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACD;YAAA,GARuBG,KAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAUrC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACE,iBACT;AAEP,CAAC;AAACT,EAAA,CA9BWD,MAAM;AAAAkB,EAAA,GAANlB,MAAM;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}