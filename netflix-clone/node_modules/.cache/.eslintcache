[{"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\index.js":"1","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\App.js":"2","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\reportWebVitals.js":"3","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\header\\header.jsx":"4","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\home\\home.jsx":"5","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\homes\\homes.jsx":"6","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\dummyData.js":"7","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\homes\\home.jsx":"8","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\homes\\homeCard.jsx":"9","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\upcomming\\upcomming.jsx":"10","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\upcomming\\uCard.jsx":"11","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\trending\\trending.jsx":"12","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\footer\\footer.jsx":"13","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\watch\\SinglePage.jsx":"14","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\scrollButton\\scrollButton.jsx":"15","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\contact\\contactPage\\contactPage.jsx":"16","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\breadcrumb\\breadcrumb.jsx":"17","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\contact\\formContact\\formContact.jsx":"18","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\genres\\genres.jsx":"19","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\viewAll\\viewAllPage.jsx":"20","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\blog\\blogPage.jsx":"21","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\blog\\blogCard.jsx":"22","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\blog\\blogDetails.jsx":"23"},{"size":535,"mtime":1677049337469,"results":"24","hashOfConfig":"25"},{"size":1295,"mtime":1677211546166,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1677049337708,"results":"27","hashOfConfig":"25"},{"size":1505,"mtime":1677214939919,"results":"28","hashOfConfig":"25"},{"size":698,"mtime":1677087221563,"results":"29","hashOfConfig":"25"},{"size":388,"mtime":1677063581405,"results":"30","hashOfConfig":"25"},{"size":12057,"mtime":1677210417742,"results":"31","hashOfConfig":"25"},{"size":1258,"mtime":1677083766863,"results":"32","hashOfConfig":"25"},{"size":1868,"mtime":1677132502144,"results":"33","hashOfConfig":"25"},{"size":1696,"mtime":1677173567181,"results":"34","hashOfConfig":"25"},{"size":514,"mtime":1677086095167,"results":"35","hashOfConfig":"25"},{"size":365,"mtime":1677086732163,"results":"36","hashOfConfig":"25"},{"size":1610,"mtime":1677088500688,"results":"37","hashOfConfig":"25"},{"size":2699,"mtime":1677211125870,"results":"38","hashOfConfig":"25"},{"size":763,"mtime":1677134572796,"results":"39","hashOfConfig":"25"},{"size":360,"mtime":1677137838512,"results":"40","hashOfConfig":"25"},{"size":778,"mtime":1677210868004,"results":"41","hashOfConfig":"25"},{"size":3848,"mtime":1677226123166,"results":"42","hashOfConfig":"25"},{"size":1514,"mtime":1677172012731,"results":"43","hashOfConfig":"25"},{"size":1425,"mtime":1677209845847,"results":"44","hashOfConfig":"25"},{"size":1180,"mtime":1677211496131,"results":"45","hashOfConfig":"25"},{"size":1230,"mtime":1677211333379,"results":"46","hashOfConfig":"25"},{"size":3738,"mtime":1677213619822,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"35dxcw",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\index.js",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\App.js",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\reportWebVitals.js",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\header\\header.jsx",["125"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.css\";\r\nconst Header = () => {\r\n  const [mobile, setMobile] = useState(false);\r\n  return (\r\n    <>\r\n      <header>\r\n        <div className=\"container flexSB\">\r\n          <nav className=\"flexSB\">\r\n            <div className=\"logo\">\r\n              <Link to=\"/\">\r\n                <img src=\"./images/logo.png\" alt=\"Logo Image\" />\r\n              </Link>\r\n            </div>\r\n            <ul\r\n              className={mobile ? \"navMenu-list\" : \"flexSB\"}\r\n              onClick={() => setMobile(false)}\r\n            >\r\n              <Link to=\"/\">Home</Link>\r\n              <Link to=\"/genres\">Genres</Link>\r\n              <Link to=\"/movies\">Movies</Link>\r\n              <Link to=\"/pages\">Pages</Link>\r\n              <Link to=\"/blog\">Blog</Link>\r\n              <Link to=\"/contact\">Contact</Link>\r\n            </ul>\r\n            <button className=\"toggle\" onClick={() => setMobile(!mobile)}>\r\n              {mobile ? (\r\n                <i className=\"fa fa-times\"></i>\r\n              ) : (\r\n                <i className=\"fa fa-bars\"></i>\r\n              )}\r\n            </button>\r\n          </nav>\r\n          <div className=\"account flexSB\">\r\n            <i className=\"fa fa-search\"></i>\r\n            <i className=\"fa fa-bell\"></i>\r\n            <i className=\"fa fa-user\"></i>\r\n            <button>Subscribe Now</button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\home\\home.jsx",["126","127","128"],[],"import React, { useState as UseState } from 'react'\r\nimport { Homes } from '../components/homes/homes'\r\nimport { Trending } from '../components/trending/trending';\r\nimport { Upcoming } from '../components/upcomming/upcomming';\r\nimport {latest, recommended, upcome} from '../dummyData'\r\n\r\nexport const Home = () => {\r\n    const [items, setitems] = UseState(upcome);\r\n    const [item, setitem] = UseState(latest);\r\n    const [rec, setRec] = UseState(recommended);\r\n\r\n  return (\r\n    <>\r\n    <Homes/>\r\n    <Upcoming items={items} title='Upcoming Movies'/>\r\n    <Upcoming items={item} title='Lasted Movies'/>\r\n    <Trending/>\r\n    <Upcoming items={rec} title='Recommended Movies'/>\r\n\r\n    </>\r\n  )\r\n}\r\n","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\homes\\homes.jsx",["129"],[],"import React, { useState } from 'react'\r\nimport { homeData } from '../../dummyData';\r\nimport { Home } from './home';\r\nimport './homes.css'\r\nexport const Homes = () => {\r\n    const [item, setitem] = useState(homeData);\r\n\r\n  return (\r\n    <>\r\n        <section className=\"home\">\r\n            <Home items={item}/>\r\n        </section>\r\n        <div className=\"margin\"></div>\r\n    </>\r\n  )\r\n}\r\n","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\dummyData.js",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\homes\\home.jsx",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\homes\\homeCard.jsx",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\upcomming\\upcomming.jsx",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\upcomming\\uCard.jsx",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\trending\\trending.jsx",["130"],[],"import React, { useState } from 'react'\r\nimport { trending } from '../../dummyData';\r\nimport { Home } from '../homes/home'\r\nimport './trending.css'\r\nexport const Trending = () => {\r\n    const [items, setitems] = useState(trending);\r\n  return (\r\n    <>\r\n        <section className=\"trending\">\r\n            <Home items={items}/>\r\n        </section>\r\n    </>\r\n  )\r\n}\r\n","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\footer\\footer.jsx",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\watch\\SinglePage.jsx",["131","132","133","134"],[],"import React, { useState, useEffect } from \"react\"\r\nimport \"./SinglePage.css\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { homeData, recommended } from \"../../dummyData\"\r\n\r\nimport { Upcoming } from \"../upcomming/upcomming\"\r\n\r\nexport const SinglePage = () => {\r\n  const {id}  = useParams();\r\n  const [item, setItem] = useState(null)\r\n\r\n  useEffect(() => {\r\n    let item = homeData.find((item) => item.id === parseInt(id))\r\n    if (item) {\r\n      setItem(item)\r\n    }\r\n  }, [id])\r\n  const [rec, setRec] = useState(recommended)\r\n\r\n  return (\r\n    <>\r\n      {item ? (\r\n        <>\r\n          <section className='singlePage'>\r\n            <div className='singleHeading'>\r\n              <h1>{item.name} </h1> <span> | {item.time} | </span> <span> HD </span>\r\n            </div>\r\n            <div className='container'>\r\n              <video src={item.video} controls></video>\r\n              <div className='para'>\r\n                <h3>Date : {item.date}</h3>\r\n                <p>{item.desc}</p>\r\n                <p>Get access to the direct Project Overview with this report. Just by a quick glance, you’ll have an idea of the total tasks allotted to the team, number of milestones given & completed, total Links created for the project and the total time taken by all the users. Each section would elaborate the data further, if chosen.</p>\r\n                <p>Get access to the direct Project Overview with this report. Just by a quick glance, you’ll have an idea of the total tasks allotted to the team, number of milestones given & completed, total Links created for the project and the total time taken by all the users. Each section would elaborate the data further, if chosen.</p>\r\n                <p>Get access to the direct Project Overview with this report. Just by a quick glance, you’ll have an idea of the total tasks allotted to the team, number of milestones given & completed, total Links created for the project and the total time taken by all the users. Each section would elaborate the data further, if chosen.</p>\r\n              </div>\r\n              <div className='soical'>\r\n                <h3>Share : </h3>\r\n                <img src='https://img.icons8.com/color/48/000000/facebook-new.png' />\r\n                <img src='https://img.icons8.com/fluency/48/000000/twitter-circled.png' />\r\n                <img src='https://img.icons8.com/fluency/48/000000/linkedin-circled.png' />\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <Upcoming items={rec} title='Recommended Movies' />\r\n        </>\r\n      ) : (\r\n        <>\r\n        <div className=\"context\">\r\n            <p>Not found</p>\r\n        </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\scrollButton\\scrollButton.jsx",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\contact\\contactPage\\contactPage.jsx",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\breadcrumb\\breadcrumb.jsx",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\contact\\formContact\\formContact.jsx",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\genres\\genres.jsx",["135"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"../components/breadcrumb/breadcrumb\";\r\nimport { MovieGenres } from \"../dummyData\";\r\nimport \"./genres.css\";\r\nconst items = 8;\r\nexport const Genres = () => {\r\n  const [next, setNext] = useState(items);\r\n\r\n  const [genres, setgenres] = useState(MovieGenres);\r\n\r\n  const handleMoreItems = () => {\r\n    setNext(next + items);\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"genres\">\r\n        <Breadcrumb active=\"Genres\" />\r\n        <div className=\"movie-genres\">\r\n          <div className=\"container-genres\">\r\n            <div className=\"title-genres\">\r\n              <h4 className=\"title\">Movie Genres</h4>\r\n            </div>\r\n            <div className=\"box-genres\">\r\n              {genres.slice(0, next)?.map((item, index) => (\r\n                <div className=\"box-item\" key={index}>\r\n                  <div className=\"img-box\">\r\n                    <img src={item.cover} alt={item.genres} />\r\n                  </div>\r\n                  <div className=\"box-description\">\r\n                    <h6>\r\n                      <Link to={item.genres}>{item.genres}</Link>\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {next < genres.length && (\r\n              <button className=\"loadMore\" onClick={handleMoreItems}>Load More</button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\viewAll\\viewAllPage.jsx",["136","137","138"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"../components/breadcrumb/breadcrumb\";\r\nimport { UCard } from \"../components/upcomming/uCard\";\r\nimport { upcome } from \"../dummyData\";\r\nimport \"./viewAllPage.css\";\r\nconst item = 12;\r\nexport const ViewAllPage = () => {\r\n  const { title, value } = useParams();\r\n\r\n  const [items, setitems] = useState(upcome);\r\n  //   useEffect(() => {\r\n  //     if(value === \"upcome\"){\r\n  //         console.log(value);\r\n  //         setitems(upcome);\r\n  //       }\r\n\r\n  //   }, []);\r\n\r\n  const [next, setNext] = useState(item);\r\n  const handleMoreItems = () => {\r\n    setNext(next + item);\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"view-all\">\r\n        <Breadcrumb active=\"View All\" />\r\n        <div className=\"title-view\">\r\n          <div className=\"container-view\">\r\n            <div className=\"title\">\r\n              <h4>{title}</h4>\r\n            </div>\r\n            <div className=\"box-view-all\">\r\n              {items?.slice(0, next)?.map((item, index) => (\r\n                <UCard key={index} item={item} />\r\n              ))}\r\n            </div>\r\n\r\n            {next < items.length && (\r\n              <button className=\"loadMore\" onClick={handleMoreItems}>\r\n                Load More\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\blog\\blogPage.jsx",["139"],[],"import React, { useState } from \"react\";\r\nimport { BlogCard } from \"../components/blog/blogCard\";\r\nimport { Breadcrumb } from \"../components/breadcrumb/breadcrumb\";\r\nimport { Blog } from \"../dummyData\";\r\nimport \"./blogPage.css\";\r\nconst item = 12;\r\nexport const BlogPage = () => {\r\n  const [items, setitems] = useState(Blog);\r\n  const [next, setNext] = useState(item);\r\n  const handleMoreItems = () => {\r\n    setNext(next + item);\r\n  };\r\n  return (\r\n    <>\r\n      <section className=\"blog\">\r\n        <div className=\"container-blog\">\r\n          <div className=\"breadcrumn-blog\">\r\n            <Breadcrumb active=\"Blog\" />\r\n          </div>\r\n          <div className=\"box-blog\">\r\n            {items?.slice(0, next)?.map((item, index) => (\r\n              <div className=\"blog-item\">\r\n                <BlogCard item={item} key={index} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"load-more\">\r\n            {next < items.length && (\r\n              <button className=\"loadMore\" onClick={handleMoreItems}>\r\n                Load More\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n","D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\components\\blog\\blogCard.jsx",[],[],"D:\\Traniing-Reactjs\\NetFlix-clone\\netflix-clone\\src\\blog\\blogDetails.jsx",[],[],{"ruleId":"140","severity":1,"message":"141","line":13,"column":17,"nodeType":"142","endLine":13,"endColumn":65},{"ruleId":"143","severity":1,"message":"144","line":8,"column":19,"nodeType":"145","messageId":"146","endLine":8,"endColumn":27},{"ruleId":"143","severity":1,"message":"147","line":9,"column":18,"nodeType":"145","messageId":"146","endLine":9,"endColumn":25},{"ruleId":"143","severity":1,"message":"148","line":10,"column":17,"nodeType":"145","messageId":"146","endLine":10,"endColumn":23},{"ruleId":"143","severity":1,"message":"147","line":6,"column":18,"nodeType":"145","messageId":"146","endLine":6,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":6,"column":19,"nodeType":"145","messageId":"146","endLine":6,"endColumn":27},{"ruleId":"143","severity":1,"message":"148","line":18,"column":15,"nodeType":"145","messageId":"146","endLine":18,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":39,"column":17,"nodeType":"142","endLine":39,"endColumn":86},{"ruleId":"149","severity":1,"message":"150","line":40,"column":17,"nodeType":"142","endLine":40,"endColumn":91},{"ruleId":"149","severity":1,"message":"150","line":41,"column":17,"nodeType":"142","endLine":41,"endColumn":92},{"ruleId":"143","severity":1,"message":"151","line":10,"column":18,"nodeType":"145","messageId":"146","endLine":10,"endColumn":27},{"ruleId":"143","severity":1,"message":"152","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"153","line":9,"column":18,"nodeType":"145","messageId":"146","endLine":9,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":11,"column":17,"nodeType":"145","messageId":"146","endLine":11,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":8,"column":17,"nodeType":"145","messageId":"146","endLine":8,"endColumn":25},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'setitems' is assigned a value but never used.","Identifier","unusedVar","'setitem' is assigned a value but never used.","'setRec' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'setgenres' is assigned a value but never used.","'useEffect' is defined but never used.","'value' is assigned a value but never used."]